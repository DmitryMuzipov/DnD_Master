@* @model IEnumerable<object> *@
@model DnD_Master.ViewModels.InitiativeIndexViewModel

<div class="form-group">
    <label asp-for="SceneName" class="control-label"></label>
    <input type="text" asp-for="SceneName" class="form-control" id="searchInput" autocomplete="off" />
    <ul id="suggestions" class="list-group" style="display:none;"></ul>
    <span asp-validation-for="SceneName" class="text-danger"></span>
</div>

<h2>Initiative Order</h2>

<form asp-action="StartCombat" method="post">
    @Html.Partial("_SceneSelectionPartial", Model.SortedQueue)
    <button type="submit" class="btn btn-danger">Start Combat</button>
</form>

<a href="/Character/Index" class="btn btn-primary">Manage Characters</a>
<a href="/Monster/Index" class="btn btn-primary">Manage Monsters</a>

@if (ViewBag.SortedEntities != null)
{
    <h2>Sorted Initiative Order</h2>
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Initiative</th>
                <th>Dead</th>
                <th>Type</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var entity in ViewBag.SortedEntities)
            {
                <tr>
                    <td>@entity.Name</td>
                    <td>@entity.Initiative</td>
                    <th>@entity.Dead</th>
                    <td>@entity.Type</td>
                </tr>
            }
        </tbody>
    </table>
}


<script src="~/lib/jquery/dist/jquery.js"></script>

<script>
    var targetUrl = '@Url.Action("SearchScenes", "Initiative")';
    //var searchStr = @Model.Scene;
</script>

<script src="~/js/letterSearch.js"></script>